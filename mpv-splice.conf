# Location of temporary files
# tmp_location = "~/tmpXXX"

# KEY BINDS
#
bind_put_time=Alt+t
bind_show_times=Alt+p
bind_process_video=Alt+c
bind_reset_current_slice=Alt+r
bind_delete_slice=Alt+d
bind_toggle_do_encode=Alt+e
bind_toggle_do_upload=Alt+u

# Default togglable variable values
#
# setting do_encode to "yes" will make the process of cutting the video
# onto pieces hundreds of times slower, but will make the cuts
# frame-perfect (with "no" there might be extra frames before each starting timestamp).
do_encode=no
do_upload=no

# Locations where resulting video is stored
#
output_location=~/Videos/cut

# Output video format
#
output_format=mp4

# UPLOADING THE VIDEO
# this script can upload the resulting video to a video hosting and automatically copy the link to it into your clipboard using online_pattern
# I haven't tasted it with anything other than streamable and not sure if these variables are enough.

# URL that is used to upload the video, if "" - script won't try to upload
#
online_upload_url=https://api.streamable.com/upload

# Your credentials used to access the website
#
online_secret=email:password

# If "yes" the script will copy the resulting video url into clipboard
#
online_do_copy_to_clipboard=yes

# URL that points to the uploaded video. %s will be substituted with the string that is found by jq under online_pattern (on the html page downloaded by curl)
# (double % is needed to excape lua's string format's %s)
#
online_resulting_url=https://streamable.com/%%s

# Pattern in the downloaded html page after downloading the video that is used to determine resulting video link
# This parameter is passed to jq -r
#
online_pattern=.shortcode
